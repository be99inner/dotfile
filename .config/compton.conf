# ############################################################################
# Backend
# ############################################################################
# Backend to use: "xrender" or "glx"
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";

# ############################################################################
# Shadows
# ############################################################################
# Enable client-side shadows on windows.
shadow = true;
# Don't draw shadow on DND windows.
no-dnd-shadow = true;
# Avoid drawing shadows on dock/panel windows.
no-dock-shadow = true;
# The blur redius of shadows. (default 12)
shadow-radius = 5;
# The left offset for shadows. (default -15)
shadow-offset-x = -5;
# The top offset for shadows. (default -15)
shadow-offset-y = -5;
# The translucency for shadows. (default .75)
shadow-opacity = 0.8;

# The shadow exclude options are helpful if you have shadows enabled.
shadow-exclude = [
    "name = 'Notification'"
];

# ############################################################################
# Other
# ############################################################################
# Try to detect WM windows and mark them as active.
mark-wmwin-focused = false;
# Mark all non-WM but override-redirect windows active (e.g. menus)
mark-ovredir-focused = false;
# Use EMWH _NET_WM_ACTIVE_WINDOWS to determine which windows is focused instead
# of using FocusIn/Out events. Usually more reliable but depend on a
# EWMH-compliant WM.
use-ewmh-active-win = false;
# Detect rounded corners and treat them as rectangular when
# --showdow-ignore-shaped is on.
detect-rounded-corners = true;

# Detect _NET_WM_OPACITY on client windows, useful for windows managers not
# passing _NET_WM_OPACITY of client  windows to frame windows.
# This prevent opacity being ignored for some apps.
detect-client-opacity = true;

# Specify refresh rate of the screen.
# If not specified or 0, compton will try detecting this with X RandR
# extension.
refresh-rate = 0;

# Set VSync method. VSync methods currenly available:
# * none: No VSync
# * drm: VSync with DRM_IOCTL_WAIT_VBLANK. May only work on some drivers.
# * opengl: Try to VSync with SGI_video_sync OpenGL extension. Only work on some drivers.
# * opengl-oml: Try to VSync with OML_sync_control OpenGL extension. Only work on some drivers.
# * opengl-swc: Try to VSync with SGI_swap_control OpenGL extension. Only work on some drivers.
# Work only with GLX backend. Known to be most effective on many drivers. Does
# not actually control paint timing, only buffer swap is affected, so it
# doesn't havet the effect of --sw-opti unlike other methods. Experimental.
# * opengl-mswc: Try to VSync with MESA_swap_control OpenGL extension.
# Basically the same as opengl-swc above, except the extension we use.
# (NOTE: some VSync methods may not be enabled at compile time.)
vsync = "opengl";

# Enable DBE painting mode, intended to use with VSync to (helpfully) eliminate
# tearing. Reported to have no effect, though.
dbe = false;

# Limit compton to repaint at most once every 1 / refresh_rate second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as they essentailly does --sw-opti's job already,
# useless you with a lower refresh rate than the actual value.
sw-opti = false;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows.
# Know to cause flickering when redirecting/unredirecting windows.
# paint-on-overlay may make the flickering less obvious.
unredir-if-possible = true;

# Specify a list of conditions of windows  that should always be considered focused.
focus-exclude  = [ "name = 'rofi'" ];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

# ############################################################################
# Windows type settings
# ############################################################################
wintype:
{
    tooltip =
    {
        # fade: Fade the particular type of windows.
        fade = true;
        # shadow: Give those windows shadow
        shadow = false;
        # opacity: Default opactiy for the type of windows.
        opacity = 0.85;
        # focus: Whether to always consider windows of this type focused.
        focus = true;
    };
};
